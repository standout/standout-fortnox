=begin
#Fortnox Swagger

#Fortnox API Swagger

OpenAPI spec version: 1.0.2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

# Common files
require 'standout_fortnox/api_client'
require 'standout_fortnox/api_error'
require 'standout_fortnox/version'
require 'standout_fortnox/configuration'

# Models
require 'standout_fortnox/models/customer'
require 'standout_fortnox/models/customer_2'
require 'standout_fortnox/models/customer_customer'
require 'standout_fortnox/models/customer_customer_default_delivery_types'
require 'standout_fortnox/models/customer_customer_default_templates'
require 'standout_fortnox/models/customers'
require 'standout_fortnox/models/customers_2'
require 'standout_fortnox/models/customers_customers'
require 'standout_fortnox/models/invoice'
require 'standout_fortnox/models/invoice_2'
require 'standout_fortnox/models/invoice_invoice'
require 'standout_fortnox/models/invoice_invoice_edi_information'
require 'standout_fortnox/models/invoice_invoice_email_information'
require 'standout_fortnox/models/invoice_invoice_invoice_rows'
require 'standout_fortnox/models/invoice_invoice_labels'
require 'standout_fortnox/models/invoices'
require 'standout_fortnox/models/invoices_2'
require 'standout_fortnox/models/invoices_invoices'
require 'standout_fortnox/models/meta_information'
require 'standout_fortnox/models/offer'
require 'standout_fortnox/models/offer_offer'
require 'standout_fortnox/models/offer_offer_email_information'
require 'standout_fortnox/models/offer_offer_offer_rows'
require 'standout_fortnox/models/offers'
require 'standout_fortnox/models/offers_offers'

# APIs
require 'standout_fortnox/api/customers_api'
require 'standout_fortnox/api/invoices_api'

module StandoutFortnox
  class << self
    # Customize default settings for the SDK using block.
    #   StandoutFortnox.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
