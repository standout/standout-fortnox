=begin
#Fortnox Swagger

#Fortnox API Swagger

OpenAPI spec version: 3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'uri'

module StandoutFortnox
  class OrdersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get a specific order
    # Retrieves the details of an order. You need to supply the unique document number that was returned when the order was created or retrieved from the list of orders.
    # @param document_number Document number
    # @param [Hash] opts the optional parameters
    # @return [Order]
    def get_order(document_number, opts = {})
      data, _status_code, _headers = get_order_with_http_info(document_number, opts)
      data
    end

    # Get a specific order
    # Retrieves the details of an order. You need to supply the unique document number that was returned when the order was created or retrieved from the list of orders.
    # @param document_number Document number
    # @param [Hash] opts the optional parameters
    # @return [Array<(Order, Fixnum, Hash)>] Order data, response status code and response headers
    def get_order_with_http_info(document_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OrdersApi.get_order ...'
      end
      # verify the required parameter 'document_number' is set
      if @api_client.config.client_side_validation && document_number.nil?
        fail ArgumentError, "Missing the required parameter 'document_number' when calling OrdersApi.get_order"
      end
      # resource path
      local_var_path = '/orders/{documentNumber}'.sub('{' + 'documentNumber' + '}', document_number.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token', 'client_secret']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Order')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OrdersApi#get_order\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update order
    # Update an order, find by document number
    # @param document_number documentNumber of order to update
    # @param body Order object to be updated
    # @param [Hash] opts the optional parameters
    # @return [Order]
    def update_order(document_number, body, opts = {})
      data, _status_code, _headers = update_order_with_http_info(document_number, body, opts)
      data
    end

    # Update order
    # Update an order, find by document number
    # @param document_number documentNumber of order to update
    # @param body Order object to be updated
    # @param [Hash] opts the optional parameters
    # @return [Array<(Order, Fixnum, Hash)>] Order data, response status code and response headers
    def update_order_with_http_info(document_number, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: OrdersApi.update_order ...'
      end
      # verify the required parameter 'document_number' is set
      if @api_client.config.client_side_validation && document_number.nil?
        fail ArgumentError, "Missing the required parameter 'document_number' when calling OrdersApi.update_order"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling OrdersApi.update_order"
      end
      # resource path
      local_var_path = '/orders/{documentNumber}'.sub('{' + 'documentNumber' + '}', document_number.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['access_token', 'client_secret']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Order')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OrdersApi#update_order\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
