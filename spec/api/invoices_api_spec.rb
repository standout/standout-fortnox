=begin
#Fortnox Swagger

#Fortnox API Swagger

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'

# Unit tests for StandoutFortnox::InvoicesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'InvoicesApi' do
  before do
    # run before each test
    @instance = StandoutFortnox::InvoicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InvoicesApi' do
    it 'should create an instance of InvoicesApi' do
      expect(@instance).to be_instance_of(StandoutFortnox::InvoicesApi)
    end
  end

  # unit tests for add_invoice
  # Add an invoice
  # Add an invoice
  # @param body Invoice object that needs to be added
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bookkeep_invoice
  # Bookkeep an invoice
  # Bookkeep an invoice
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'bookkeep_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_invoice
  # Cancel an invoice
  # Cancels an invoice (same as “Makulerad” in the GUI)
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'cancel_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for credit_invoice
  # Credit an invoice
  # Creates a credit invoice from the provided invoice. The created credit invoice will be referenced in the property CreditInvoiceReference.
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'credit_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for e_invoice
  # Send an e-invoice
  # Sends an e-invoice to the customer with an attached PDF document of the invoice. Note that this action also sets the property Sent as true.
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'e_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for email_invoice
  # Email an invoice
  # Sends an e-mail to the customer with an attached PDF document of the invoice. You can use the properties in the EmailInformation to customize the e-mail message on each invoice.
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'email_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for external_print_invoice
  # Mark invoice as &#39;Sent&#39; without generating a PDF
  # This action is used to set the field Sent as true from an external system without generating a PDF.
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'external_print_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cancelled_invoices
  # Get all cancelled invoices
  # Retrieves all invoices with the status &#39;cancelled&#39;
  # @param [Hash] opts the optional parameters
  # @return [Invoices]
  describe 'get_cancelled_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fully_paid_invoices
  # Get all fully paid invoices
  # Retrieves all invoices that has been fully paid
  # @param [Hash] opts the optional parameters
  # @return [Invoices]
  describe 'get_fully_paid_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice
  # Get a specific invoice
  # Retrieves the details of an invoice. You need to supply the unique document number that was returned when the invoice was created or retrieved from the list of invoices.
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'get_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoices
  # Get all invoices
  # Get all invoices
  # @param [Hash] opts the optional parameters
  # @return [Invoices]
  describe 'get_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_unbooked_invoices
  # Get all unbooked invoices
  # Retrieves all invoices that is unbooked
  # @param [Hash] opts the optional parameters
  # @return [Invoices]
  describe 'get_unbooked_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_unpaid_and_overdue_invoices
  # Get all unpaid and overdue invoices
  # Retrieves all invoices that is unpaid and overdue
  # @param [Hash] opts the optional parameters
  # @return [Invoices]
  describe 'get_unpaid_and_overdue_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_unpaid_invoices
  # Get all unpaid invoices
  # Retrieves all invoices that is unpaid
  # @param [Hash] opts the optional parameters
  # @return [Invoices]
  describe 'get_unpaid_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for preview_invoice
  # Preview an invoice
  # This action returns a PDF document with the current template that is used by the specific document. Unliike the action print, this action doesn’t set the property Sent as true.
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'preview_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for print_invoice
  # Print an invoice
  # This action returns a PDF document with the current template that is used by the specific document. Note that this action also sets the property Sent as true.
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'print_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for print_invoice_reminder
  # Print an invoice reminder
  # This action returns a PDF document with the current reminder template that is used by the specific document. Note that this action also sets the property Sent as true.
  # @param document_number Document number
  # @param [Hash] opts the optional parameters
  # @return [Invoice]
  describe 'print_invoice_reminder test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_invoice
  # Update invoice
  # Update an invoice, find by document number
  # @param body Invoice object to be updated
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
