=begin
#Fortnox Swagger

#Fortnox API Swagger

OpenAPI spec version: 1.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for StandoutFortnox::CustomersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CustomersApi' do
  before do
    # run before each test
    @instance = StandoutFortnox::CustomersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomersApi' do
    it 'should create an instance of CustomersApi' do
      expect(@instance).to be_instance_of(StandoutFortnox::CustomersApi)
    end
  end

  # unit tests for add_customer
  # Create customer
  # Create customer
  # @param body Customer object that needs to be added
  # @param [Hash] opts the optional parameters
  # @return [Customers]
  describe 'add_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_customer
  # Delete customer
  # Delete customer
  # @param customer_id ID of customer to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_active_customers
  # Check for active customers
  # Retrieves all customers that are active
  # @param [Hash] opts the optional parameters
  # @return [Customers]
  describe 'get_active_customers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customer
  # Get customer by Id
  # Get customer by Id
  # @param customer_id ID of customer to return
  # @param [Hash] opts the optional parameters
  # @return [Customer]
  describe 'get_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customers
  # Get all customers
  # Get all customers
  # @param [Hash] opts the optional parameters
  # @return [Customers]
  describe 'get_customers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_inactive_customers
  # Check for inactive customers
  # Retrieves all customers that are inactive
  # @param [Hash] opts the optional parameters
  # @return [Customers]
  describe 'get_inactive_customers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_customer
  # Update customer
  # Update customer
  # @param customer_id ID of customer to update
  # @param body Customer object that needs to be added
  # @param [Hash] opts the optional parameters
  # @return [Customer]
  describe 'update_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
